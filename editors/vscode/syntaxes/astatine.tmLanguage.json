{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Astatine",
    "fileTypes": [
        "astatine"
    ],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#module-declaration"
        },
        {
            "include": "#imports"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#chars"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#definition"
        },
        {
            "include": "#modifiers"
        },
        {
            "include": "#expressions"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.astatine",
                    "begin": "-\\[",
                    "end": "\\]-",
                    "patterns": [
                        {
                            "name": "punctuation.definition.comment.astatine",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "comment.line.astatine",
                    "match": "(--).*$\\n?",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.astatine"
                        }
                    }
                }
            ]
        },
        "module-declaration": {
            "name": "meta.module.astatine",
            "match": "\\b(module)\\s+((?:\\w|_)(?:\\w|_|[0-9])*)\\s+(where)",
            "captures": {
                "1": {
                    "name": "keyword.module.astatine"
                },
                "2": {
                    "name": "entity.name.namespace.astatine"
                },
                "3": {
                    "name": "keyword.module.astatine"
                }
            }
        },
        "imports": {
            "patterns": [
                {
                    "name": "meta.import.astatine",
                    "match": "\\b(import)\\s+((?:\\w|_)(?:\\w|_|[0-9])*)",
                    "captures": {
                        "1": {
                            "name": "keyword.import.astatine"
                        },
                        "2": {
                            "name": "entity.name.namespace.astatine"
                        }
                    }
                },
                {
                    "name": "meta.import.astatine",
                    "match": "\\b(import)\\s*(\\*)\\s*(from)\\s+((?:\\w|_)(?:\\w|_|[0-9])*)",
                    "captures": {
                        "1": {
                            "name": "keyword.import.astatine"
                        },
                        "2": {
                            "name": "punctuation.asterisk.astatine"
                        },
                        "3": {
                            "name": "keyword.from.astatine"
                        },
                        "4": {
                            "name": "entity.name.namespace.astatine"
                        }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.module.astatine",
                    "match": "\\b(module)"
                },
                {
                    "name": "keyword.where.astatine",
                    "match": "\\b(where)"
                },
                {
                    "name": "keyword.import.astatine",
                    "match": "\\b(import)"
                },
                {
                    "name": "keyword.from.astatine",
                    "match": "\\b(from)"
                },
                {
                    "name": "keyword.control.do.astatine",
                    "match": "\\b(do)"
                },
                {
                    "name": "keyword.control.end.astatine",
                    "match": "\\b(end)"
                }
            ]
        },
        "primitives": {
            "name": "storage.type.primitive.astatine",
            "match": "\\b(Int8|Int16|Int32|Int6|UInt8|UInt16|UInt32|UInt64|Float32|Float64|Bool|Char|String|Type)"
        },
        "types": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#primitives"
                },
                {
                    "name": "entity.name.type.astatine",
                    "match": "\\b(?:\\w|_)(?:\\w|_|[0-9])*\\b"
                },
                {
                    "name": "meta.type.array.astatine",
                    "begin": "(\\[)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.modifier.array.astatine"
                        }
                    },
                    "end": "(\\])",
                    "endCaptures": {
                        "1": {
                            "name": "storage.modifier.array.astatine"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#types"
                        }
                    ]
                },
                {
                    "name": "storage.modifier.pointer.astatine",
                    "match": "(&)",
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "definition": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#function-definition"
                },
                {
                    "include": "#variable-definition"
                }
            ]
        },
        "arguments": {
            "name": "meta.argument.astatine",
            "begin": "((?:\\w|_)(?:\\w|_|[0-9])*)",
            "beginCaptures": {
                "1": {
                    "name": "variable.parameter.astatine"
                }
            },
            "end": "(,)|(?:(?=\\)))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.comma.astatine"
                }
            },
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#types"
                }
            ]
        },
        "function-definition": {
            "patterns": [
                {
                    "name": "meta.function.definition.astatine",
                    "begin": "((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(::)\\s*(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.astatine"
                        },
                        "2": {
                            "name": "punctuation.double-colon.astatine"
                        },
                        "3": {
                            "name": "punctuation.begin.bracket.astatine"
                        }
                    },
                    "end": "(\\))",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.end.bracket.astatine"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#arguments"
                        }
                    ]
                },
                {
                    "name": "meta.function.return-type.astatine",
                    "begin": "(\\->)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.begin.bracket.astatine"
                        }
                    },
                    "end": "((=)|\n)",
                    "endCaptures": {
                        "1": {
                            "name": "keyword.operator.assignment.astatine"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#types"
                        }
                    ]
                }
            ]
        },
        "variable-definition": {
            "patterns": [
                {
                    "name": "meta.global.definition.astatine",
                    "begin": "((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(::)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.other.astatine"
                        },
                        "2": {
                            "name": "punctuation.double-colon.astatine"
                        }
                    },
                    "end": "(=)",
                    "endCaptures": {
                        "1": {
                            "name": "keyword.operator.assignment.astatine"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#types"
                        }
                    ]
                },
                {
                    "name": "meta.global.definition.astatine",
                    "match": "((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(=)",
                    "captures": {
                        "1": {
                            "name": "variable.other.astatine"
                        },
                        "2": {
                            "name": "keyword.operator.assignment.astatine"
                        }
                    }
                }
            ]
        },
        "modifiers": {
            "name": "meta.modifier-list.astatine",
            "begin": "(\\[)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.begin.bracket.astatine"
                }
            },
            "end": "(\\])",
            "endCaptures": {
                "1": {
                    "name": "punctuation.end.bracket.astatine"
                }
            },
            "patterns": [
                {
                    "name": "meta.modifier.astatine",
                    "match": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(,?)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.astatine"
                        },
                        "2": {
                            "name": "punctuation.comma.astatine"
                        }
                    }
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#chars"
                },
                {
                    "include": "#digits"
                }
            ]
        },
        "expressions": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#chars"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#numbers"
                },
                {
                    "include": "#do-block"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#call"
                },
                {
                    "include": "#identifiers"
                },
                {
                    "include": "#types"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.comparison.astatine",
                    "match": "(((>|<)(=)?)|==|!=)"
                },
                {
                    "name": "keyword.operator.assignment.astatine",
                    "match": "(=)"
                },
                {
                    "name": "keyword.operator.logic.astatine",
                    "match": "(\\!|\\&\\&|\\|\\|)"
                },
                {
                    "name": "keyword.operator.arithmetic.astatine",
                    "match": "(\\+|\\-|\\*|\\/|\\^|\\~|\\~|%)(=)?"
                },
                {
                    "name": "keyword.operator.bitwise.astatine",
                    "match": "(\\&|\\||\\^|\\<\\<|\\>|\\>)(=)?"
                }
            ]
        },
        "do-block": {
            "name": "meta.do-block.astatine",
            "begin": "\\b(do)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.do.astatine"
                }
            },
            "end": "\\b(end)",
            "endCaptures": {
                "1": {
                    "name": "keyword.control.end.astatine"
                }
            },
            "patterns": [
                {
                    "include": "#expressions"
                }
            ]
        },
        "call": {
            "name": "meta.call.astatine",
            "begin": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(\\()",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.call.astatine"
                },
                "2": {
                    "name": "punctuation.begin.paren.astatine"
                }
            },
            "end": "(\\))",
            "endCaptures": {
                "1": {
                    "name": "punctuation.end.paren.astatine"
                }
            },
            "patterns": [
                {
                    "name": "punctuation.comma.astatine",
                    "match": "(,)"
                },
                {
                    "include": "#expressions"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "meta.index.struct.astatine",
                    "match": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(\\.)",
                    "captures": {
                        "1": {
                            "name": "variable.other.astatine"
                        },
                        "2": {
                            "name": "punctuation.period.astatine"
                        }
                    }
                },
                {
                    "name": "meta.index.namespace.astatine",
                    "match": "(::)?\\s*((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(::)",
                    "captures": {
                        "1": {
                            "name": "punctuation.double-colon.astatine"
                        },
                        "2": {
                            "name": "entity.name.namespace.astatine"
                        },
                        "3": {
                            "name": "punctuation.double-colon.astatine"
                        }
                    }
                },
                {
                    "include": "#primitives"
                },
                {
                    "name": "meta.index.other.astatine",
                    "match": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\b",
                    "captures": {
                        "1": {
                            "name": "variable.other.astatine"
                        },
                        "2": {
                            "name": "variable.other.astatine"
                        }
                    }
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.hex.astatine",
                    "match": "\\b(?<!\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$)",
                    "captures": {
                        "1": {
                            "name": "storage.type.numeric.astatine"
                        }
                    }
                },
                {
                    "name": "constant.numeric.binary.astatine",
                    "match": "\\b(?<!\\$)0(?:b|B)[01][01_]*\\b(?!\\$)",
                    "captures": {
                        "1": {
                            "name": "storage.type.numeric.astatine"
                        }
                    }
                },
                {
                    "name": "constant.numeric.octal.astatine",
                    "match": "\\b(?<!\\$)0(?:o|O)[0-7][0-7_]*\\b(?!\\$)",
                    "captures": {
                        "1": {
                            "name": "storage.type.numeric.astatine"
                        }
                    }
                },
                {
                    "name": "constant.numeric.hex.astatine",
                    "match": "\\b(?<!\\$)[0-9][0-9_]*\\b(?!\\$)",
                    "captures": {
                        "1": {
                            "name": "storage.type.numeric.astatine"
                        }
                    }
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.astatine",
            "begin": "(\")",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.begin.quote.double.astatine"
                }
            },
            "end": "(\")",
            "endCaptures": {
                "1": {
                    "name": "punctuation.end.quoted.double.astatine"
                }
            },
            "patterns": [
                {
                    "name": "constant.character.escape.astatine",
                    "match": "\\\\."
                }
            ]
        },
        "chars": {
            "patterns": [
                {
                    "name": "string.quoted.single.astatine",
                    "match": "(')(\\\\.)(')",
                    "captures": {
                        "1": {
                            "name": "punctuation.begin.quote.single.astatine"
                        },
                        "2": {
                            "name": "constant.character.escape.astatine"
                        },
                        "3": {
                            "name": "punctuation.end.quote.single.astatine"
                        }
                    }
                },
                {
                    "name": "string.quoted.single.astatine",
                    "match": "(')(.)(')",
                    "captures": {
                        "1": {
                            "name": "punctuation.begin.quote.single.astatine"
                        },
                        "2": {
                            "name": "string.quoted.single.astatine"
                        },
                        "3": {
                            "name": "punctuation.end.quote.single.astatine"
                        }
                    }
                }
            ]
        }
    },
    "scopeName": "source.at"
}